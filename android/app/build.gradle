plugins {
    id 'org.jetbrains.kotlin.plugin.compose' version '2.0.21'
    id("com.google.dagger.hilt.android")
    id 'io.gitlab.arturbosch.detekt' version '1.23.4'
}

apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.google.devtools.ksp"
apply plugin: "kotlin-kapt"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]

    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = io.github.react-native-community:jsc-android-intl:2026004.+`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.novel"
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        applicationId "com.novel"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
                "-Xno-param-assertions",
                "-Xno-call-assertions"
        ]
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "ENABLE_LOGGING", "true"
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            buildConfigField "boolean", "ENABLE_LOGGING", "false"
        }
    }
    
    // 启用 buildFeatures
    buildFeatures {
        buildConfig = true
    }
}

// Detekt 配置
detekt {
    toolVersion = "1.23.4"
    config.setFrom(file("../detekt.yml"))
    buildUponDefaultConfig = true
    
    reports {
        html.required = true
        xml.required = false
        txt.required = false
        sarif.required = false
        md.required = false
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    implementation "androidx.core:core-ktx:1.16.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.9.0"
    implementation "androidx.activity:activity-compose:1.10.1"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-graphics"
    implementation "androidx.compose.ui:ui-tooling-preview"
//    implementation "androidx.compose.material3:material3"
    implementation "androidx.navigation:navigation-compose:2.8.5"
    implementation "androidx.compose.foundation:foundation:1.8.2"
    
    // 更新Compose动画版本以支持SharedTransitionLayout
    implementation "androidx.compose.animation:animation:1.8.2"
    implementation "androidx.compose.animation:animation-core:1.8.2"

    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "io.coil-kt:coil-compose:2.6.0"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.12.0"
    implementation "com.squareup.okhttp3:okhttp-sse:4.12.0"
    implementation "com.google.dagger:hilt-android:2.52"
    implementation "androidx.security:security-crypto:1.1.0-alpha07"
    implementation 'androidx.compose.material3:material3-android:1.3.2'
    kapt "com.google.dagger:hilt-compiler:2.52"
    implementation "androidx.hilt:hilt-navigation-compose:1.2.0"
    implementation "androidx.room:room-runtime:2.7.1"
    implementation "androidx.room:room-common:2.7.1"
    implementation "androidx.room:room-ktx:2.7.1"
    ksp "androidx.room:room-compiler:2.7.1"
    
    // 下拉刷新和上拉加载
    implementation "com.google.accompanist:accompanist-swiperefresh:0.32.0"
    implementation "androidx.compose.material:material:1.7.6"
    
    // Shimmer 骨架屏动画
    implementation "com.valentinilk.shimmer:compose-shimmer:1.3.3"
    
    // Timber 日志框架
    implementation "com.jakewharton.timber:timber:5.0.1"

    // Debug 工具 - 仅在 debug 构建中包含
    debugImplementation "com.squareup.leakcanary:leakcanary-android:2.12"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    // 单元测试依赖
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0"
    androidTestImplementation "org.mockito:mockito-core:5.18.0"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:5.2.1"
    androidTestImplementation "app.cash.turbine:turbine:1.0.0"
    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "com.google.truth:truth:1.4.4"
    
    // UI测试依赖
    androidTestImplementation "androidx.test:runner:1.6.2"
    androidTestImplementation "androidx.test:rules:1.6.1"
    androidTestImplementation platform("androidx.compose:compose-bom:2025.05.01")
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    androidTestImplementation "androidx.compose.ui:ui-test-manifest"
    
    // Hilt测试处理器

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
